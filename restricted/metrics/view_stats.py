#!/usr/bin/env python3
"""
–ü—Ä–æ—Å–º–æ—Ç—Ä –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Ç–∞–±–ª–∏—Ü–µ
"""

import pandas as pd
import os


def view_statistics():
    """–û—Ç–æ–±—Ä–∞–∑–∏—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Ç–∞–±–ª–∏—Ü–µ"""
    csv_file = "data/daily_statistics.csv"

    if not os.path.exists(csv_file):
        print("‚ùå –§–∞–π–ª —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ analytics.py.")
        return

    try:
        df = pd.read_csv(csv_file)

        print("\n" + "=" * 80)
        print("üìä –ï–ñ–ï–î–ù–ï–í–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê –£–ß–ê–°–¢–ù–ò–ö–û–í SBC")
        print("=" * 80)

        # Header
        print(
            f"{'–î–∞—Ç–∞':<12} {'–ù–æ–≤—ã—Ö':<8} {'–í–∞–ª–∏–¥':<8} {'–û—Ç–ø—Ä–∞–≤':<8} {'–û—Ç–≤–µ—Ç':<8} {'–î':<6} {'–Ø':<6} {'F-up':<6} {'%–í–∞–ª':<6} {'%–û—Ç–≤':<6} {'%–î':<6} {'%–Ø':<6}"
        )
        print("-" * 100)

        total_scraped = 0
        total_valid = 0
        total_sent = 0
        total_answered = 0
        total_daniil = 0
        total_yaroslav = 0
        total_followups = 0

        for _, row in df.iterrows():
            # Check for both old and new column names
            if "–î–∞—Ç–∞" in row:
                date = row["–î–∞—Ç–∞"]
                scraped = row["–ù–æ–≤—ã—Ö –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤"]
                valid = row["–ü—Ä–æ–≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞–Ω—ã—Ö"]
                sent = row["–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –°–æ–æ–±—â–µ–Ω–∏–π"]
                answered = row["–û—Ç–≤–µ—Ç–∏–ª–∏"]

                # New columns with defaults
                daniil = row.get("–î–∞–Ω–∏–∏–ª", 0)
                yaroslav = row.get("–Ø—Ä–æ—Å–ª–∞–≤", 0)
                followups = row.get("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ follow_up", 0)

                # Percentages (expecting decimal values, not * 100)
                valid_pct = (
                    row.get(
                        "% –í–∞–ª–∏–¥–Ω—ã—Ö", (valid / scraped) if scraped > 0 else 0
                    )
                    * 100
                )
                answer_pct = (
                    row.get(
                        "% –û—Ç–≤–µ—Ç–∏–≤—à–∏—Ö", (answered / sent) if sent > 0 else 0
                    )
                    * 100
                )
                daniil_pct = (
                    row.get("% –î–∞–Ω–∏–∏–ª", (daniil / sent) if sent > 0 else 0)
                    * 100
                )
                yaroslav_pct = (
                    row.get("% –Ø—Ä–æ—Å–ª–∞–≤", (yaroslav / sent) if sent > 0 else 0)
                    * 100
                )
            else:
                # Fallback to old column names
                date = row["date"]
                scraped = row["scraped_new_contacts"]
                valid = row["valid_by_filters"]
                sent = row["sent_messages"]
                answered = row["answered"]

                # Default values for new columns
                daniil = 0
                yaroslav = 0
                followups = 0

                if "valid_percentage" in row and pd.notna(
                    row["valid_percentage"]
                ):
                    valid_pct = row["valid_percentage"] * 100
                else:
                    valid_pct = (valid / scraped * 100) if scraped > 0 else 0

                if "answer_percentage" in row and pd.notna(
                    row["answer_percentage"]
                ):
                    answer_pct = row["answer_percentage"] * 100
                else:
                    answer_pct = (answered / sent * 100) if sent > 0 else 0

                daniil_pct = 0
                yaroslav_pct = 0

            print(
                f"{date:<12} {scraped:<8} {valid:<8} {sent:<8} {answered:<8} {daniil:<6} {yaroslav:<6} {followups:<6} {valid_pct:<5.1f} {answer_pct:<5.1f} {daniil_pct:<5.1f} {yaroslav_pct:<5.1f}"
            )

            total_scraped += scraped
            total_valid += valid
            total_sent += sent
            total_answered += answered
            total_daniil += daniil
            total_yaroslav += yaroslav
            total_followups += followups

        # Print totals
        print("-" * 100)
        total_valid_pct = (
            (total_valid / total_scraped * 100) if total_scraped > 0 else 0
        )
        total_answer_pct = (
            (total_answered / total_sent * 100) if total_sent > 0 else 0
        )
        total_daniil_pct = (
            (total_daniil / total_sent * 100) if total_sent > 0 else 0
        )
        total_yaroslav_pct = (
            (total_yaroslav / total_sent * 100) if total_sent > 0 else 0
        )

        print(
            f"{'–ò–¢–û–ì–û':<12} {total_scraped:<8} {total_valid:<8} {total_sent:<8} {total_answered:<8} {total_daniil:<6} {total_yaroslav:<6} {total_followups:<6} {total_valid_pct:<5.1f} {total_answer_pct:<5.1f} {total_daniil_pct:<5.1f} {total_yaroslav_pct:<5.1f}"
        )

        print("\nüìà –ö–ª—é—á–µ–≤—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏:")
        print(f"   ‚Ä¢ –í—Å–µ–≥–æ —Å–æ–±—Ä–∞–Ω–æ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤: {total_scraped:,}")
        print(
            f"   ‚Ä¢ –ö–æ–Ω—Ç–∞–∫—Ç–æ–≤ –ø—Ä–æ—à–µ–¥—à–∏—Ö —Ñ–∏–ª—å—Ç—Ä—ã: {total_valid:,} ({total_valid_pct:.1f}%)"
        )
        print(f"   ‚Ä¢ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {total_sent:,}")
        print(
            f"   ‚Ä¢ –ü–æ–ª—É—á–µ–Ω–æ –æ—Ç–≤–µ—Ç–æ–≤: {total_answered:,} ({total_answer_pct:.1f}%)"
        )
        print(
            f"   ‚Ä¢ –°–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –î–∞–Ω–∏–ª–∞: {total_daniil:,} ({total_daniil_pct:.1f}%)"
        )
        print(
            f"   ‚Ä¢ –°–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –Ø—Ä–æ—Å–ª–∞–≤–∞: {total_yaroslav:,} ({total_yaroslav_pct:.1f}%)"
        )
        print(f"   ‚Ä¢ Follow-up —Å–æ–æ–±—â–µ–Ω–∏–π: {total_followups:,}")

        if total_sent > 0:
            conversion_rate = (
                (total_answered / total_valid * 100) if total_valid > 0 else 0
            )
            print(
                f"   ‚Ä¢ –û–±—â–∏–π –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –∫–æ–Ω–≤–µ—Ä—Å–∏–∏: {conversion_rate:.1f}% (–æ—Ç–≤–µ—Ç—ã/–≤–∞–ª–∏–¥–Ω—ã–µ)"
            )

        print("\n" + "=" * 80)

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    # Change to script directory
    script_dir = os.path.dirname(os.path.abspath(__file__))
    os.chdir(script_dir)

    view_statistics()


if __name__ == "__main__":
    main()
